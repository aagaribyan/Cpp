#include <fstream>
#include <cmath>
using namespace std;
const int N=3;

ifstream fin("In.txt");
ofstream fout("Out.txt");

int main()
{
 double A[N][N],A1[N][N],U[N][N],U1[N][N],U2[N][N],e,pogr=1,max1,fi,sum=0;
 int i,j,k,I,J;
 
 // ввод матрицы
 for(i=0;i<N;i++)
  {
   for(j=0;j<N;j++)
    {
     fin>>A[i][j];
     A1[i][j]=0;
     U1[i][j]=0;
     U2[i][j]=0;
     U[i][j]=0;
    }
   U1[i][i]=1;
   U2[i][i]=1;
  }
  
 fin>>e; // точность
 
 while(pogr>e)
  {
   // поиск макс недиагонального эл-та матрицы
   max1=0;
   for(i=0;i<N-1;i++)
     for(j=i+1;j<N;j++)
      {
       if(fabs(A[i][j])>max1)
        {
         max1=fabs(A[i][j]);
         I=i;
         J=j;
        }
      }
   
   // матрица вращения
   fi=atan(fabs((2*A[I][J])/(A[I][I]-A[J][J])))/2;
   U1[I][J]=-sin(fi);
   U1[J][I]=sin(fi);
   U1[I][I]=cos(fi);
   U1[J][J]=cos(fi);
   
   for(i=0;i<N;i++)
     for(j=0;j<N;j++)
       for(k=0;k<N;k++)
        {
         A1[i][j]+=U1[k][i]*A[k][j];
         U[i][j]+=U2[i][k]*U1[k][j];
        }
	
   for(i=0;i<N;i++)
     for(j=0;j<N;j++)
      {
       A[i][j]=0;
       for(k=0;k<N;k++)
         A[i][j]+=A1[i][k]*U1[k][j];
      }
	
   // вычисление погрешности текущей итерации
   for(i=0;i<N-1;i++)
     for(j=i+1;j<N;j++)
       sum+=A[i][j]*A[i][j];
   pogr=sqrt(sum); 
   sum=0;
   
   // подготовка вспомогательных матриц к следующей итерации
   for(i=0;i<N;i++)
    {
     for(j=0;j<N;j++)
      {
       U2[i][j]=U[i][j];
       U1[i][j]=0;
       U[i][j]=0;
       A1[i][j]=0;
      }
     U1[i][i]=1;
    }
	
  }
  
  // вывод ответа
 for(i=0;i<N;i++)
  {
   fout<<"(";
   
   for(j=0;j<N-1;j++)
     fout<<U2[j][i]<<";";
   
   fout<<U2[N-1][i]<<") для Лямбда"<<(i+1)<<" = "<<A[i][i]<<endl;
  }
  
 return 0;
}
