#include<iostream>
#include<math.h>
using namespace std;
const int n=5;

int main()
{
 double x[n]={0.1, 0.5, 0.9, 1.3, 1.7}, f[n]={-2.2026, -0.19315, 0.79464, 1.5624, 2.2306}, h[n], X=0.8, a[n], b[n], c[n], d[n], C[n][n+1], Otv;
 int i,j,k=-1;
 for(i=0;i<n;i++)
 {
   h[i]=0;
   a[i]=0;
   b[i]=0;
   c[i]=0;
   d[i]=0;
   for(j=0;j<n+1;j++) 
	   C[i][j]=0;
 }

 for(i=1;i<n;i++)
 {
   if((X<x[i])&&(X>x[i-1])) 
     k=i;
   
   h[i]=x[i]-x[i-1];
 }
  
 if(k==-1) 
 {
	 cout<<"X* не принадлежит интервалу";
	 return 0;
 }

 for(i=2;i<n;i++)
 {
     if(i!=2) C[i][i-1]=h[i-2];
     if(i!=n-1) C[i][i+1]=h[i-1];
    C[i][i]=2*(h[i-1]+h[i]);
    C[i][n]=3*((f[i]-f[i-1])/h[i]-(f[i-1]-f[i-2])/h[i-1]);
 }
 
 
 // метод прогонки
 double P[n],Q[n],znam;
 
 P[2]=-C[2][3]/C[2][2];
 Q[2]=C[2][n]/C[2][2];
 for(i=3; i<n-1; i++)
 {
   znam=C[i][i]+C[i][i-1]*P[i-1];
   P[i]=-C[i][i+1]/znam;
   Q[i]=(C[i][n]-C[i][i-1]*Q[i-1])/znam;
 }
 
 c[n-1]=(C[n-1][n]-C[n-1][n-2]*Q[n-2])/(C[n-1][n-1]+C[n-1][n-2]*P[n-2]);
 for(i=n-2; i>=2; i--)
	 c[i]=P[i]*c[i+1]+Q[i];
 
 //ai, bi и di
 for(i=1;i<n-1;i++)
 {
   a[i]=f[i-1];
   b[i]=(f[i]-f[i-1])/h[i]-h[i]*(c[i+1]+2*c[i])/3;
   d[i]=(c[i+1]-c[i])/(3*h[i]);
 }
 a[n-1]=f[n-2]; 
 b[n-1]=(f[n-1]-f[n-2])/h[n-1]-2*h[n-1]*c[n-1]/3; 
 d[n-1]=-c[n-1]/(3*h[n-1]);
 
 for(i=0;i<n;i++) 
	 cout<<"a"<<i<<"="<<a[i]<<" ";
 cout<<endl;
 
 for(i=0;i<n;i++) 
	 cout<<"b"<<i<<"="<<b[i]<<" ";
 cout<<endl;
 
 for(i=0;i<n;i++) 
	 cout<<"c"<<i<<"="<<c[i]<<" ";
 cout<<endl;
 
 for(i=0;i<n;i++) 
	 cout<<"d"<<i<<"="<<d[i]<<" ";
 cout<<endl<<endl;
 
 Otv=a[k]+b[k]*(X-x[k-1])+c[k]*pow(X-x[k-1],2)+d[k]*pow(X-x[k-1],3);
 cout<<"Otvet: "<<Otv;
 
 return 0;
}
