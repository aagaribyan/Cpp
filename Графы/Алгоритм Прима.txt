//
//Максимальное дерево
//

#include<fstream>
using namespace std;

ifstream fin("In.txt");
ofstream fout("Out.txt");

int main(){
 int N,i,j,k,I,J,max1,g=0,sumW=0;
 fin>>N;
 int **A=new int*[N],**A2=new int*[N], **AP=new int*[N], *E=new int[N];
 
 for(i=0;i<N;i++)
  {
   A[i]=new int[N];
   AP[i]=new int[N];
   A2[i]=new int[N];
   E[i]=0;
  }
  
 for(i=0;i<N;i++)
   for(j=0;j<N;j++)
    {
     fin>>A[i][j];  //ввод матрицы весов*
     AP[i][j]=0;
    }
	
 for(i=0;i<N-1;i++)
   for(j=i+1;j<N;j++)
     if(A2[i][j]>max1)
      {
       max1=A2[i][j];
       I=i;
       J=j;
      }

 E[I]=I+1;
 E[J]=J+1;
 AP[I][J]=A[I][J];
 A[I][J]=0;
 while(g!=0)
  {
   g=0;
   max1=0;
   k=0;
   for(i=0;i<N;i++)
     for(j=0;j<N;j++)
       A2[i][j]=A[i][j];
	   
   while(max1==0)
    {
     for(i=0;i<N-1;i++)
       for(j=i+1;j<N;j++)
         if(A2[i][j]>max1)
          {
           max1=A2[i][j];
           I=i;
           J=j;
          }
     A2[I][J]=0;
	 
     for(i=0;i<N;i++)
      {
       if(E[i]==I+1) k++;
       if(E[i]==J+1) k++;
      }
	  
     if(k==0) max1=0;
       else
        {
         if(k==1)
          {
           E[I]=I+1;
           E[J]=J+1;
           AP[I][J]=A[I][J];
          }
         A[I][J]=0;
        }
    }
	
   for(i=0;i<N;i++)
     if(E[i]==0) g++;
  }
  
 for(i=0;i<N;i++)
  {
   for(j=0;j<N;j++)
    {
     fout<<AP[i][j];
     sumW+=AP[i][j];
    }
   fout<<endl;
  }
 fout<<endl<<"Вес дерева="<<sumW;
 
 return 0;
}


//
// Минимальное дерево
//

#include<fstream>
using namespace std;

ifstream fin("In.txt");
ofstream fout("Out.txt");

int main(){
 short int N,i,j,k,I,J,g=1,sumW=0,min1=32766;
 fin>>N;

 int **A=new int*[N],**A2=new int*[N], **AP=new int*[N], *E=new int[N];
 for(i=0;i<N;i++)
  {
   A[i]=new int[N];
   AP[i]=new int[N];
   A2[i]=new int[N];
   E[i]=0;
  }
  
 for(i=0;i<N;i++)
   for(j=0;j<N;j++)
    {
     fin>>A[i][j];  //ввод матрицы весов*
     AP[i][j]=0;
    }
	
 for(i=0;i<N-1;i++)
   for(j=i+1;j<N;j++)
     if((A[i][j]<min1)&&(A[i][j]!=0))
      {
       min1=A[i][j];
       I=i;
       J=j;
      }
	  
 E[I]=I+1;
 E[J]=J+1;
 AP[I][J]=A[I][J];
 A[I][J]=0;
 while(g!=0)
  {
   g=0;
   min1=32766;
   k=0;
   
   for(i=0;i<N;i++)
     for(j=0;j<N;j++)
       A2[i][j]=A[i][j];
	
   while(min1==32766)
    {
     for(i=0;i<N-1;i++)
       for(j=i+1;j<N;j++)
         if((A2[i][j]<min1)&&(A2[i][j]!=0))
          {
           min1=A2[i][j];
           I=i;
           J=j;
          }
     A2[I][J]=0;
	 
     for(i=0;i<N;i++)
      {
       if(E[i]==I+1) k++;
       if(E[i]==J+1) k++;
      }
	  
     if(k==0) min1=32766;
       else
        {
         if(k==1)
          {
           E[I]=I+1;
           E[J]=J+1;
           AP[I][J]=A[I][J];
          }
         A[I][J]=0;
        }
    }

   for(i=0;i<N;i++)
     if(E[i]==0) g++;
  }
 
 for(i=0;i<N;i++)
  {
   for(j=0;j<N;j++)
    {
     fout<<AP[i][j];
     sumW+=AP[i][j];
    }
   fout<<endl;
  }
 fout<<endl<<"Вес дерева="<<sumW;
 
 return 0;
}